package com.siteview.nnm.data;

import java.util.HashMap;
import java.util.Map;

public class PortManage {
	/**
	 * port type num to desc
	 */
	public static Map<String,String> portTypenum2TypeDesc=new HashMap<String,String>();
	/**
	 * port work status num to desc 
	 */
	public static Map<String,String> portWorkStatusnum2Desc=new HashMap<String,String>();
	/**
	 * admin status num to desc
	 */
	public static Map<String,String> adminStatus=new HashMap<String,String>();
	static{
		portTypenum2TypeDesc.put("1", "other");
		portTypenum2TypeDesc.put("2", "regular1822");
		portTypenum2TypeDesc.put("3", "hdh1822");
		portTypenum2TypeDesc.put("4", "ddnX25");
		portTypenum2TypeDesc.put("5", "rfc877x25");
		portTypenum2TypeDesc.put("6", "ethernetCsmacd");
		portTypenum2TypeDesc.put("7", "iso88023Csmacd");
		portTypenum2TypeDesc.put("8", "iso88024TokenBus");
		portTypenum2TypeDesc.put("9", "iso88025TokenRing");
		portTypenum2TypeDesc.put("10", "iso88026Man");
		portTypenum2TypeDesc.put("11", "starLan");
		portTypenum2TypeDesc.put("12", "proteon10Mbit");
		portTypenum2TypeDesc.put("13", "proteon80Mbit");
		portTypenum2TypeDesc.put("14", "hyperchannel");
		portTypenum2TypeDesc.put("15", "fddi");
		portTypenum2TypeDesc.put("16", "lapb");
		portTypenum2TypeDesc.put("17", "sdlc");
		portTypenum2TypeDesc.put("18", "ds1");
		portTypenum2TypeDesc.put("19", "e1");
		portTypenum2TypeDesc.put("20", "basicISDN");
		portTypenum2TypeDesc.put("21", "primaryISDN");
		portTypenum2TypeDesc.put("22", "propPointToPointSerial");
		portTypenum2TypeDesc.put("23", "ppp");
		portTypenum2TypeDesc.put("24", "softwareLoopback");
		portTypenum2TypeDesc.put("25", "eon");
		portTypenum2TypeDesc.put("26", "ethernet3Mbit");
		portTypenum2TypeDesc.put("27", "nsip");
		portTypenum2TypeDesc.put("28", "slip");
		portTypenum2TypeDesc.put("29", "ultra");
		portTypenum2TypeDesc.put("30", "ds3");
		portTypenum2TypeDesc.put("31", "sip");
		portTypenum2TypeDesc.put("32", "frameRelay");
		portTypenum2TypeDesc.put("33", "rs232");
		portTypenum2TypeDesc.put("34", "para");
		portTypenum2TypeDesc.put("35", "arcnet");
		portTypenum2TypeDesc.put("36", "arcnetPlus");
		portTypenum2TypeDesc.put("37", "atm");
		portTypenum2TypeDesc.put("38", "miox25");
		portTypenum2TypeDesc.put("39", "sonet");
		portTypenum2TypeDesc.put("40", "x25ple");
		portTypenum2TypeDesc.put("41", "iso88022llc");
		portTypenum2TypeDesc.put("42", "localTalk");
		portTypenum2TypeDesc.put("43", "smdsDxi");
		portTypenum2TypeDesc.put("44", "frameRelayService");
		portTypenum2TypeDesc.put("45", "v35");
		portTypenum2TypeDesc.put("46", "hssi");
		portTypenum2TypeDesc.put("47", "hippi");
		portTypenum2TypeDesc.put("48", "modem");
		portTypenum2TypeDesc.put("49", "aal5");
		portTypenum2TypeDesc.put("50", "sonetPath");
		portTypenum2TypeDesc.put("51", "sonetVT");
		portTypenum2TypeDesc.put("52", "smdsIcip");
		portTypenum2TypeDesc.put("53", "propVirtual");
		portTypenum2TypeDesc.put("54", "propMultiplexor");
		portTypenum2TypeDesc.put("55", "ieee80212");
		portTypenum2TypeDesc.put("56", "fibreChannel");
		portTypenum2TypeDesc.put("57", "hippiInterface");
		portTypenum2TypeDesc.put("58", "frameRelayInterconnect");
		portTypenum2TypeDesc.put("59", "aflane8023");
		portTypenum2TypeDesc.put("60", "aflane8025");
		portTypenum2TypeDesc.put("61", "cctEmul");
		portTypenum2TypeDesc.put("62", "fastEther");
		portTypenum2TypeDesc.put("63", "isdn");
		portTypenum2TypeDesc.put("64", "v11");
		portTypenum2TypeDesc.put("65", "v36");
		portTypenum2TypeDesc.put("66", "g703at64k");
		portTypenum2TypeDesc.put("67", "g703at2mb");
		portTypenum2TypeDesc.put("68", "qllc");
		portTypenum2TypeDesc.put("69", "fastEtherFX");
		portTypenum2TypeDesc.put("70", "channel");
		portTypenum2TypeDesc.put("71", "ieee80211");
		portTypenum2TypeDesc.put("72", "ibm370parChan");
		portTypenum2TypeDesc.put("73", "escon");
		portTypenum2TypeDesc.put("74", "dlsw");
		portTypenum2TypeDesc.put("75", "isdns");
		portTypenum2TypeDesc.put("76", "isdnu");
		portTypenum2TypeDesc.put("77", "lapd");
		portTypenum2TypeDesc.put("78", "ipSwitch");
		portTypenum2TypeDesc.put("79", "rsrb");
		portTypenum2TypeDesc.put("80", "atmLogical");
		portTypenum2TypeDesc.put("81", "ds0");
		portTypenum2TypeDesc.put("82", "ds0Bundle");
		portTypenum2TypeDesc.put("83", "bsc");
		portTypenum2TypeDesc.put("84", "async");
		portTypenum2TypeDesc.put("85", "cnr");
		portTypenum2TypeDesc.put("86", "iso88025Dtr");
		portTypenum2TypeDesc.put("87", "eplrs");
		portTypenum2TypeDesc.put("88", "arap");
		portTypenum2TypeDesc.put("89", "propCnls");
		portTypenum2TypeDesc.put("90", "hostPad");
		portTypenum2TypeDesc.put("91", "termPad");
		portTypenum2TypeDesc.put("92", "frameRelayMPI");
		portTypenum2TypeDesc.put("93", "x213");
		portTypenum2TypeDesc.put("94", "adsl");
		portTypenum2TypeDesc.put("95", "radsl");
		portTypenum2TypeDesc.put("96", "sdsl");
		portTypenum2TypeDesc.put("97", "vdsl");
		portTypenum2TypeDesc.put("98", "iso88025CRFPInt");
		portTypenum2TypeDesc.put("99", "myrinet");
		portTypenum2TypeDesc.put("100", "voiceEM");
		portTypenum2TypeDesc.put("101", "voiceFXO");
		portTypenum2TypeDesc.put("102", "voiceFXS");
		portTypenum2TypeDesc.put("103", "voiceEncap");
		portTypenum2TypeDesc.put("104", "voiceOverIp");
		portTypenum2TypeDesc.put("105", "atmDxi");
		portTypenum2TypeDesc.put("106", "atmFuni");
		portTypenum2TypeDesc.put("107", "atmIma ");
		portTypenum2TypeDesc.put("108", "pppMultilinkBundle");
		portTypenum2TypeDesc.put("109", "ipOverCdlc ");
		portTypenum2TypeDesc.put("110", "ipOverClaw ");
		portTypenum2TypeDesc.put("111", "stackToStack");
		portTypenum2TypeDesc.put("112", "virtualIpAddress ");
		portTypenum2TypeDesc.put("113", "mpc ");
		portTypenum2TypeDesc.put("114", "ipOverAtm ");
		portTypenum2TypeDesc.put("115", "iso88025Fiber");
		portTypenum2TypeDesc.put("116", "tdlc");
		portTypenum2TypeDesc.put("117", "gigabitEthernet");
		portTypenum2TypeDesc.put("118", "hdlc");
		portTypenum2TypeDesc.put("119", "lapf");
		portTypenum2TypeDesc.put("120", "v37");
		portTypenum2TypeDesc.put("121", "x25mlp");
		portTypenum2TypeDesc.put("122", "x25huntGroup");
		portTypenum2TypeDesc.put("123", "trasnpHdlc");
		portTypenum2TypeDesc.put("124", "interleave");
		portTypenum2TypeDesc.put("125", "fast");
		portTypenum2TypeDesc.put("126", "ip");
		portTypenum2TypeDesc.put("127", "docsCableMaclayer");
		portTypenum2TypeDesc.put("128", "docsCableDownstream");
		portTypenum2TypeDesc.put("129", "docsCableUpstream");
		portTypenum2TypeDesc.put("130", "a12MppSwitch");
		portTypenum2TypeDesc.put("131", "tunnel");
		portTypenum2TypeDesc.put("132", "coffee");
		portTypenum2TypeDesc.put("133", "ces");
		portTypenum2TypeDesc.put("134", "atmSubInterface");
		portTypenum2TypeDesc.put("135", "l2vlan");
		portTypenum2TypeDesc.put("136", "l3ipvlan");
		portTypenum2TypeDesc.put("137", "l3ipxvlan");
		portTypenum2TypeDesc.put("138", "digitalPowerline");
		portTypenum2TypeDesc.put("139", "mediaMailOverIp");
		portTypenum2TypeDesc.put("140", "dtm");
		portTypenum2TypeDesc.put("141", "dcn");
		portTypenum2TypeDesc.put("142", "ipForward");
		portTypenum2TypeDesc.put("143", "msdsl");
		portTypenum2TypeDesc.put("144", "ieee1394");
		portTypenum2TypeDesc.put("145", "if-gsn");
		portTypenum2TypeDesc.put("146", "dvbRccMacLayer");
		portTypenum2TypeDesc.put("147", "dvbRccDownstream");
		portTypenum2TypeDesc.put("148", "dvbRccUpstream");
		portTypenum2TypeDesc.put("149", "atmVirtual");
		portTypenum2TypeDesc.put("150", "mplsTunnel");
		portTypenum2TypeDesc.put("151", "srp");
		portTypenum2TypeDesc.put("152", "voiceOverAtm");
		portTypenum2TypeDesc.put("153", "voiceOverFrameRelay");
		portTypenum2TypeDesc.put("154", "idsl");
		portTypenum2TypeDesc.put("155", "compositeLink");
		portTypenum2TypeDesc.put("156", "ss7SigLink");
		portTypenum2TypeDesc.put("157", "propWirelessP2P");
		portTypenum2TypeDesc.put("158", "frForward");
		portTypenum2TypeDesc.put("159", "rfc1483");
		portTypenum2TypeDesc.put("160", "usb");
		portTypenum2TypeDesc.put("161", "ieee8023adLag");
		portTypenum2TypeDesc.put("162", "bgppolicyaccounting");
		portTypenum2TypeDesc.put("163", "frf16MfrBundle");
		portTypenum2TypeDesc.put("164", "h323Gatekeeper");
		portTypenum2TypeDesc.put("165", "h323Proxy");
		portTypenum2TypeDesc.put("166", "mpls");
		portTypenum2TypeDesc.put("167", "mfSigLink");
		portTypenum2TypeDesc.put("168", "hdsl2");
		portTypenum2TypeDesc.put("169", "shdsl");
		portTypenum2TypeDesc.put("170", "ds1FDL");
		portTypenum2TypeDesc.put("171", "pos");
		portTypenum2TypeDesc.put("172", "dvbAsiIn");
		portTypenum2TypeDesc.put("173", "dvbAsiOut");
		portTypenum2TypeDesc.put("174", "plc");
		portTypenum2TypeDesc.put("175", "nfas");
		portTypenum2TypeDesc.put("176", "tr008");
		portTypenum2TypeDesc.put("177", "gr303RDT");
		portTypenum2TypeDesc.put("178", "gr303IDT");
		portTypenum2TypeDesc.put("179", "isup");
		portTypenum2TypeDesc.put("180", "propDocsWirelessMaclayer");
		portTypenum2TypeDesc.put("181", "propDocsWirelessDownstream");
		portTypenum2TypeDesc.put("182", "propDocsWirelessUpstream");
		portTypenum2TypeDesc.put("183", "hiperlan2");
		portTypenum2TypeDesc.put("184", "propBWAp2Mp");
		portTypenum2TypeDesc.put("185", "sonetOverheadChannel");
		portTypenum2TypeDesc.put("186", "digitalWrapperOverheadChannel");
		portTypenum2TypeDesc.put("187", "aal2");
		portTypenum2TypeDesc.put("188", "radioMAC");
		portTypenum2TypeDesc.put("189", "atmRadio");
		portTypenum2TypeDesc.put("190", "imt");
		portTypenum2TypeDesc.put("191", "mvl");
		portTypenum2TypeDesc.put("192", "reachDSL");
		portTypenum2TypeDesc.put("193", "frDlciEndPt");
		portTypenum2TypeDesc.put("194", "atmVciEndPt");
		portTypenum2TypeDesc.put("195", "opticalChannel");
		portTypenum2TypeDesc.put("196", "opticalTransport");
		portTypenum2TypeDesc.put("197", "propAtm");
		portTypenum2TypeDesc.put("198", "voiceOverCable");
		portTypenum2TypeDesc.put("199", "infiniband");
		portTypenum2TypeDesc.put("200", "teLink");
		portTypenum2TypeDesc.put("201", "q2931");
		portTypenum2TypeDesc.put("202", "virtualTg");
		portTypenum2TypeDesc.put("203", "sipTg");
		portTypenum2TypeDesc.put("204", "sipSig");
		portTypenum2TypeDesc.put("205", "docsCableUpstreamChannel");
		portTypenum2TypeDesc.put("206", "econet");
		portTypenum2TypeDesc.put("207", "pon155");
		portTypenum2TypeDesc.put("208", "pon622");
		portTypenum2TypeDesc.put("209", "bridge");
		portTypenum2TypeDesc.put("210", "linegroup");
		portTypenum2TypeDesc.put("211", "voiceEMFGD");
		portTypenum2TypeDesc.put("212", "voiceFGDEANA");
		portTypenum2TypeDesc.put("213", "voiceDID");
		portTypenum2TypeDesc.put("214", "mpegTransport");
		portTypenum2TypeDesc.put("215", "sixToFour");
		portTypenum2TypeDesc.put("216", "gtp");
		portTypenum2TypeDesc.put("217", "pdnEtherLoop1");
		portTypenum2TypeDesc.put("218", "pdnEtherLoop2");
		portTypenum2TypeDesc.put("219", "opticalChannelGroup");
		portTypenum2TypeDesc.put("220", "homepna");
		portTypenum2TypeDesc.put("221", "gfp");
		portTypenum2TypeDesc.put("222", "ciscoISLvlan");
		portTypenum2TypeDesc.put("223", "actelisMetaLOOP");
		portTypenum2TypeDesc.put("224", "fcipLink");
		portTypenum2TypeDesc.put("225", "rpr");
		portTypenum2TypeDesc.put("226", "qam");
		portTypenum2TypeDesc.put("227", "lmp ");
		portTypenum2TypeDesc.put("228", "cblVectaStar");
		portTypenum2TypeDesc.put("229", "docsCableMCmtsDownstream");
		portTypenum2TypeDesc.put("230", "adsl2");
		portTypenum2TypeDesc.put("231", "macSecControlledIF");
		portTypenum2TypeDesc.put("232", "macSecUncontrolledIF");
		portTypenum2TypeDesc.put("233", "aviciOpticalEther");
		portTypenum2TypeDesc.put("234", "atmbond");
		portTypenum2TypeDesc.put("235", "voiceFGDOS");
		portTypenum2TypeDesc.put("236", "mocaVersion1");
		portTypenum2TypeDesc.put("237", "ieee80216WMAN");
		portTypenum2TypeDesc.put("238", "adsl2plus");
		portTypenum2TypeDesc.put("239", "dvbRcsMacLayer");
		portTypenum2TypeDesc.put("240", "dvbTdm");
		portTypenum2TypeDesc.put("241", "dvbRcsTdma");
		portTypenum2TypeDesc.put("242", "x86Laps");
		portTypenum2TypeDesc.put("243", "wwanPP");
		portTypenum2TypeDesc.put("244", "wwanPP2");
		
		
		
		portWorkStatusnum2Desc.put("1", "up");
		portWorkStatusnum2Desc.put("2", "down");
		portWorkStatusnum2Desc.put("3", "testing");
		portWorkStatusnum2Desc.put("4", "unknown");
		portWorkStatusnum2Desc.put("5", "DORMANT");
		portWorkStatusnum2Desc.put("6", "NOTPRESENT");
		portWorkStatusnum2Desc.put("7", "LOWERLAYERDOWN");
		portWorkStatusnum2Desc.put("8", "ALARM");
		portWorkStatusnum2Desc.put("65536", "ACTIVING");
		portWorkStatusnum2Desc.put("65537", "BLOCK");
		portWorkStatusnum2Desc.put("65538", "CONFIG");
		portWorkStatusnum2Desc.put("65539", "LOCALLOOPBACK");
		portWorkStatusnum2Desc.put("65540", "REMOTELOOPBACK");
		portWorkStatusnum2Desc.put("65541", "PAYLOADLOOPBACK");
		portWorkStatusnum2Desc.put("65542", "BLOCKANDLOCALLOOPBACK");
		portWorkStatusnum2Desc.put("65543", "blockandremoteloopback");
		portWorkStatusnum2Desc.put("65544", "blockandremoteloopback");
		portWorkStatusnum2Desc.put("65545", "linkrxblock");
		portWorkStatusnum2Desc.put("65546", "linktxblock");
		portWorkStatusnum2Desc.put("65547", "linkallblock");
		portWorkStatusnum2Desc.put("65548", "fault");
		portWorkStatusnum2Desc.put("65549", "unconfig");
		portWorkStatusnum2Desc.put("65550", "empty");
		
		adminStatus.put("1", "up");
		adminStatus.put("2", "down");
		adminStatus.put("3", "testing");
		adminStatus.put("65536", "block");
		adminStatus.put("65537", "unblock");
		adminStatus.put("65538", "reset");
		adminStatus.put("65539", "localloopback");
		adminStatus.put("65540", "remoteloopback");
		adminStatus.put("65541", "payloadloopback");
		adminStatus.put("65542", "unloopback");
		adminStatus.put("65543", "linkrxblock");
		adminStatus.put("65544", "linktxblock");
		adminStatus.put("65545", "linkallblock");
		adminStatus.put("65546", "linkrxunblock");
		adminStatus.put("65547", "linktxunblock");
		adminStatus.put("65548", "linkallunblock");
	
		
	}
}
